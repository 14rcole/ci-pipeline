- builder:
    name: ci-pipeline-duffy-builder
    builders:
        - macro-cciskel-duffy-prepared-allocate:
            jobclass: builder
            duffytimeoutsecs: 3600
            playbook: sig-atomic-buildscripts/centos-ci/setup/setup-system.yml
        - shell: |
            #!/bin/bash
            set -xeuo pipefail
            (echo -n "export RSYNC_PASSWORD=" && cat ~/duffy.key | cut -c '-13') > rsync-password.sh
            cat >>task.env <<EOF
            export JENKINS_JOB_NAME="${{JOB_NAME}}"
            export JENKINS_BUILD_TAG="${{BUILD_TAG}}"
            EOF
            cat task.env
            rsync -Hrlptv --stats -e ssh task.env rsync-password.sh builder@${{DUFFY_HOST}}:
            for repo in aos-ci sig-atomic-buildscripts; do
                rsync -Hrlptv --stats --delete -e ssh $repo/ builder@${{DUFFY_HOST}}:$repo
            done

            build_success=true
            if ! ssh -tt builder@${{DUFFY_HOST}} '. task.env && ./aos-ci/tasks/{task}'; then
                build_success=false
            fi

            # Currently we don't have any logs being generated
            #rsync -Hrlptv --stats -e ssh builder@${{DUFFY_HOST}}:logs/ $WORKSPACE/logs || true
            # Exit with code from the build
            if test "${{build_success}}" = "false"; then
                echo 'Build failed, see logs above'; exit 1
            fi

- publisher:
    name: ci-pipeline-duffy-publisher
    publishers:
        - archive:
            artifacts: 'logs/**'
            allow-empty: 'true'
        - macro-cciskel-duffy-deallocate

- job-template:
    name: ci-pipeline-rpmbuild
    defaults: ci-pipeline-defaults
    concurrent: false
    logrotate:
      numToKeep: 30
      artifactNumToKeep: 15
# TODO: trigger
    parameters:
        - string:
            name: CI_MESSAGE
            description: |
              fedmsg msg
    builders:
        - shell: |
            #!/bin/bash
            set -xuo pipefail

            # Write script to parse fields (can likely be improved)
            cat << EOF > ${{WORKSPACE}}/parse_fedmsg.py
            #!/bin/env python
            import json
            import sys

            reload(sys)
            sys.setdefaultencoding('utf-8')
            message = json.load(sys.stdin)
            if 'commit' in message:
                msg = message['commit']
            
                for key in msg:
                    print "fed_%s=%s" % (key, msg[key])
            EOF
            chmod +x ${{WORKSPACE}}/parse_fedmsg.py

            # Write fedmsg fields to a file to inject them
            if [ -n "$CI_MESSAGE" ]; then
                echo $CI_MESSAGE | ${{WORKSPACE}}/parse_fedmsg.py > fedmsg_fields.txt
            fi

        - inject:
            properties-file: ${{WORKSPACE}}/fedmsg_fields.txt
        - system-groovy:
           command: build.description = build.getEnvironment().get('fed_repo')
        - ci-pipeline-duffy-builder:
            task: rpmbuild-test
        - inject:
            properties-file: ${{WORKSPACE}}/fedmsg_fields.txt
        - system-groovy:
           command: build.description = build.getEnvironment().get('description')

    publishers:
      - archive:
          artifacts: '*.*'
          allow-empty: 'true'
      - ci-pipeline-duffy-publisher

## Describes the project
- project:
    name: ci-pipeline-rpmbuild-jobs
    jobs:
      - ci-pipeline-rpmbuild
