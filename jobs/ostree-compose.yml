- builder:
    name: ci-pipeline-ostree-boot-trigger
    builders:
        - trigger-builds:
            - project: ci-pipeline-ostree-boot-sanity
              current-parameters: true
              property-file: ${WORKSPACE}/logs/ostree.props
              block: true
              same-node: true

- builder:
    name: ci-pipeline-ostree-image-trigger
    builders:
        - conditional-step:
            condition-kind: shell
            condition-command: |
                prev=0
                number=$(curl $JENKINS_URL/job/{compose_job}/lastBuild/api/json 2>/dev/null | jq '.number')
                for ((i=$number; i>0; i--)); do
                    branch=$(curl $JENKINS_URL/job/{compose_job}/$i/api/json 2>/dev/null | jq -r '.actions[] | select(.parameters).parameters[] | select(.name | contains("fed_branch")).value')
                    if [ "$branch" = "$fed_branch" ]; then
                        result=$(curl $JENKINS_URL/job/{compose_job}/$i/api/json 2>/dev/null| jq -r '.result')
                        if [ "$result" = "SUCCESS" ]; then
                            prev=$(curl $JENKINS_URL/job/{compose_job}/$i/api/json 2>/dev/null| jq '.timestamp' | cut -c1-10)
                            break
                        fi
                    fi
                done
                cur=$(date +%s)
                elapsed=$((cur - prev))
                if [ $elapsed -gt 86400 ]; then
                   exit 0
                fi
                exit 1
            on-evaluation-failure: dont-run
            steps:
                  - trigger-builds:
                    - project: '{compose_job}'
                      current-parameters: true

- job:
    name: ci-pipeline-ostree-compose
    defaults: ci-pipeline-defaults
    parameters:
        - string:
            name: fed_branch
            description: |
              which branch to build
    builders:
        - ci-pipeline-duffy-builder:
            task: ostree-compose
            variables: |
                export BUILD="${fed_branch}"
                export JENKINS_JOB_NAME="${JOB_NAME}"
                export JENKINS_BUILD_TAG="${BUILD_TAG}"
                export OSTREE_BRANCH="${OSTREE_BRANCH:-}"
            playbook: sig-atomic-buildscripts/centos-ci/setup/setup-system.yml
        - inject:
            properties-file: ${WORKSPACE}/logs/ostree.props
        - ci-pipeline-ostree-boot-trigger
        - ci-pipeline-ostree-image-trigger:
            compose_job: ci-pipeline-ostree-image-compose

    publishers:
        - ci-pipeline-duffy-publisher

- job:
    name: ci-pipeline-ostree-image-compose
    defaults: ci-pipeline-defaults
    parameters:
        - string:
            name: fed_branch
            description: |
              which branch to build
    builders:
        - ci-pipeline-duffy-builder:
            task: ostree-image-compose
            variables: |
                export BUILD="${fed_branch}"
                export JENKINS_JOB_NAME="${JOB_NAME}"
                export JENKINS_BUILD_TAG="${BUILD_TAG}"
                export OSTREE_BRANCH="${OSTREE_BRANCH:-}"
            playbook: sig-atomic-buildscripts/centos-ci/setup/setup-system.yml
        - inject:
            properties-file: ${WORKSPACE}/logs/ostree.props
        - ci-pipeline-ostree-boot-trigger

    publishers:
        - ci-pipeline-duffy-publisher

- job:
    name: ci-pipeline-ostree-boot-sanity
    defaults: ci-pipeline-defaults
    parameters:
        - string:
            name: fed_branch
            description: |
              which branch to test
        - string:
            name: image2boot
            description: |
              url pointing to the image to boot
        - string:
            name: commit
            description: |
              sha pointing to the particular commit we want to test
    builders:
        - ci-pipeline-duffy-builder:
            task: ostree-boot-image
            variables: |
                export BUILD="${fed_branch}"
                export image2boot="${image2boot:-}"
                export commit=${commit:-}
                export JENKINS_JOB_NAME="${JOB_NAME}"
                export JENKINS_BUILD_TAG="${BUILD_TAG}"
                export OSTREE_BRANCH="${OSTREE_BRANCH:-}"
                export ANSIBLE_HOST_KEY_CHECKING="False"
            playbook: sig-atomic-buildscripts/centos-ci/setup/setup-system.yml
    publishers:
        - ci-pipeline-duffy-publisher
        - trigger-parameterized-builds:
          - project: 'ci-pipeline-atomic-host-tests'
            current-parameters: true
            condition: SUCCESS
